[project]
name = "fastapi-mcp-openapi"
version = "0.1.0"
description = "FastAPI MCP OpenAPI - A library that provides MCP tools for endpoint introspection in FastAPI applications"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    {name = "FastAPI MCP OpenAPI Contributors"}
]
keywords = ["fastapi", "mcp", "model-context-protocol", "openapi", "api-documentation"]
dependencies = [
    "fastapi>=0.115.14",
    "jsonrpc-base>=2.2.0",
    "mcp>=1.10.1",
    "pydantic>=2.11.7",
    "sse-starlette>=2.3.6",
    "starlette>=0.46.2",
    "typing-extensions>=4.14.1",
    "uvicorn>=0.35.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.8.0",
    "mypy>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.8.0",
    "mypy>=1.8.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
