name: 🚀 Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  # Trigger on tag pushes for releases to PyPI and pushes to main for TestPyPI
  push:
    tags:
      - 'v*'
    branches:
      - main
  # Allow manual triggers for testing
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Run tests before building and publishing
  test:
    name: 🧪 Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: 🧪 Run tests
        run: |
          pytest -v --tb=short

  # Build distribution packages
  build:
    name: 🔨 Build distribution 📦
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for proper version detection
          fetch-depth: 0
          
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          
      - name: 🔨 Build distribution packages
        run: python -m build
        
      - name: 📤 Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # Publish to TestPyPI on every push to main
  publish-to-testpypi:
    name: 🧪 Publish Python 🐍 distribution 📦 to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    # Only run on main branch pushes (not on tags)
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: testpypi
      url: https://test.pypi.org/p/fastapi-mcp-openapi
      
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      
    steps:
      - name: 📥 Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          
      - name: 🚀 Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  # Publish to PyPI only on tagged releases
  publish-to-pypi:
    name: 🚀 Publish Python 🐍 distribution 📦 to PyPI
    needs: build
    runs-on: ubuntu-latest
    # Only publish to PyPI on tag pushes (releases)
    if: startsWith(github.ref, 'refs/tags/')
    
    environment:
      name: pypi
      url: https://pypi.org/p/fastapi-mcp-openapi
      
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      
    steps:
      - name: 📥 Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          
      - name: 🚀 Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

  # Create GitHub Release with the uploaded distributions
  github-release:
    name: 📝 Create GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
      
    steps:
      - name: 📥 Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          
      - name: 📝 Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes "Release ${{ github.ref_name }}"
          --title "🚀 Release ${{ github.ref_name }}"
          
      - name: 📤 Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
